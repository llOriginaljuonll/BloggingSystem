; การเชื่อมต่อฐานข้อมูล
1. ลงโปรแกรม xampp control panel
2. ตั้งค่าโปรแกรมใน xampp
3. โหลด mysqlclient package
4. ตั้งค่าใน settings.py ในส่วน database

; ข้อมูลหมวดหมู่บทความ
1.ชื่อคอลัมน์: ID(PK)
  ชนิดข้อมูล: Integer
  ความหมาย: รหัสหมวดหมู่บทความ

2.ชื่อคอลัมน์: CategoryName
  ชนิดข้อมูล: CharField
  ความหมาย: ชื่อหมวดหมู่บทความ

3.ชื่อคอลัมน์: Description
  ชนิดข้อมูล: TextField
  ความหมาย: คำอธิบายทบความ

4.ชื่อคอลัมน์: Content
  ชนิดข้อมูล: TextField
  ความหมาย: เนื้อหาบทความ

5.ชื่อคอลัมน์: Writer
  ชนิดข้อมูล: CharField
  ความหมาย: ชื่อนักเขียน

6.ชื่อคอลัมน์: Views
  ชนิดข้อมูล: Integer
  ความหมาย: จำนวนยอดผู้เข้าชม

7.ชื่อคอลัมน์: Image
  ชนิดข้อมูล: ImageField
  ความหมาย: ภาพปก

8.ชื่อคอลัมน์: Created
  ชนิดข้อมูล: DateTimeField
  ความหมาย: วันที่เขียนบทความ

9.ชื่อคอลัมน์: Category_id(FK)
  ชนิดข้อมูล: Integer
  ความหมาย: รหัสหมวดหมู่บทความ

  FK(Foreign Key) คือ + การสร้างกฎความสัมพันธ์ระหว่างสองตารางเข้าด้วยกัน + โดยที่ Foreign Key จะเป็น + คอลัมน์ของตารางลูก + ที่ใช้เชื่อมโยงกันกับตารางแม่ + ที่เป็น Primary Key(PK)

ตัวอย่าง การสร้าง model
class Category(models.Model):
	name = models.CharField(max_length = 255, unique = True)
วิเคราะห์
1. unique เป็นการบอกว่าห้ามสร้างชื่อซ้ำ
2. models.Model คือ (คำตอบใน stackoverflow) It means: make the Category class inherit from the Model base class from the models module.
	2.1 inherit แปลว่า สืบทอด

; __str__ คืออะไร ทำหน้าที่อะไร?

; Tip
1.ถ้าเราไม่ได้ตั้งค่า PK + การ migrations ครั้งแรก + จะมีการสร้าง PK ขึ้นมาเองโดยอัตโนมัติ
2.latest = Blogs.objects.all().order_by('-pk')[:2]
	วิเคราะห์
	2.1 order_by เป็นคำสั่งให้เราเรียงลำดับข้อมูล
	2.2 ('pk') คือ ให้เราเรียงตาม pk (อ้างอิงจาก database)
	2.3 ถ้าใส่เครื่องหมายติดลบ คือ ให้เรียงจากมากไปน้อยแทน
	2.4 latest จึงเป็นการแสดงชุดข้อมูลจากล่าสุดเรียงไปเก่าสุด
	2.5 [:2] + เป็นการบอกว่าให้แสดงข้อมูล + แค่สองชุดเท่านั้น
; การนำข้อมูลมาใช้ใน Template
1.ดึงข้อมูลมาเก็บไว้ในตัวแปรหนึ่งใน ฟังก์ชั่นที่อยู่ใน Views ที่จะส่งข้อมูลเราไปยัง Template ที่เราต้องการให้ข้อมูลไปแสดง
2.import โมเดลที่เราต้องการดึงข้อมูลเข้ามา

; views.py
from category.models import Category
	def index(request):
	categories = Category.objects.all()
	return render(request, 'frontend/index.html', {'categories': categories})

3.{'categories': categories} หมายความว่าด้านซ้ายคือตัวแปรที่จะเอาไปใช้ใน Template ด้านขวาคือตัวแปรที่เราใช้เก็บข้อมูล
4.สร้างตัวแปรวนลูปในบันทัดที่เราต้องการ

; template
 <ul>
	{% for category in categories %}
	<li><a href="#">{{ category.name }}<span>(0)</span></a></li>
	{% endfor %}
</ul>
5.{{ category.name }} = name คือชื่อ field ที่เราอ้างอิง